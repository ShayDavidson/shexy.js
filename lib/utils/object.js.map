{"version":3,"sources":["../../src/utils/object.js"],"names":[],"mappings":";;;;;;;QAKgB,QAAQ,GAAR,QAAQ;QAUR,SAAS,GAAT,SAAS;;;;;;;;;AAVlB,SAAS,QAAQ,CAAC,IAAI,EAAE;AAC3B,WAAQ,IAAI,IAAI,QAAO,IAAI,yCAAJ,IAAI,OAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC;CACrF;;;;;;;;AAAA,AAQM,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE;AACtC,QAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;AACtC,cAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AAC/B,gBAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;AACvB,oBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;AACd,0BAAM,CAAC,MAAM,CAAC,MAAM,sBACf,GAAG,EAAG,EAAE,EACX,CAAA;iBACL;AACD,yBAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;aACtC,MAAM;AACH,sBAAM,CAAC,MAAM,CAAC,MAAM,sBACf,GAAG,EAAG,MAAM,CAAC,GAAG,CAAC,EACpB,CAAA;aACL;SACJ,CAAC,CAAA;KACL;AACD,WAAO,MAAM,CAAA;CAChB","file":"object.js","sourcesContent":["/**\n * Simple is object check.\n * @param {*} item The value to check if it's an object or not.\n * @returns {Boolean} True if the given value is an object.\n */\nexport function isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item) && item !== null)\n}\n\n/**\n * Deep merge two objects.\n * @param {Object} target target object.\n * @param {Object} source source object.\n * @returns {Object} Deep merged object (source into target).\n */\nexport function deepMerge(target, source) {\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, {\n                        [key]: {}\n                    })\n                }\n                deepMerge(target[key], source[key])\n            } else {\n                Object.assign(target, {\n                    [key]: source[key]\n                })\n            }\n        })\n    }\n    return target\n}\n"]}